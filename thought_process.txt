This file documents my thought process and assumptions while working on this project:

Thought process:
    Translating intergalactic numerals to roman numerals should be separated from the logic of mathematical operations
    with roman numerals -> There needs to be a class dedicated to handling roman numerals.

    After implementing tests for isValidNumeral(), implementing the method itself with regex(regex101.com)
    After implementing tests for getNumeralValue(), implementing the method itself.
    Designing and implementing tests for methods in InputHandler, implementing methods afterwards.
    Redesigning methods in InputHandler, as demands deviate from original estimate during development.
    Renamed InputHandler to InputParser to reflect it's role better in name.
    Next step: Designing a class to handle IO and associated tests.

Assumptions:
    1. The program should be able to process any 'intergalactic numeral' given.
        1.1 These numerals consist of a single string of lower case letters.
    2. The program should be able to process any mineral given.
        2.1 Minerals have the format of a single string of letters, he first upper case, the rest lower case.
    3. Neither the minerals, nor the numerals are allowed to be keywords used in input processing.
        These keywords are: "how", "many", "much", "Credits", "is"
    4. A Credit value can not begin with a 0.